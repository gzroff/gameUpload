<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// physics properties.
phy_fixed_rotation = true;

on_ladder=false;

// locals.
jump_timeout = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Horizontal movement.
var dir_x = 0;
if (gamepad_is_connected(0)) {
    dir_x = gamepad_axis_value(0, gp_axislh);
}
if (keyboard_check(vk_left)) {
    dir_x = -1;
}
if (keyboard_check(vk_right)) {
    dir_x = 1;
}
if (dir_x &gt; 0.16 || dir_x &lt; -0.16) {
    phy_speed_x = clamp(phy_speed_x + (CHARACTER_ACCEL * dir_x) * dt,
        -CHARACTER_SPEED, CHARACTER_SPEED);
} else {
    if (phy_speed_x &gt; 0) {
        phy_speed_x = clamp(phy_speed_x - (CHARACTER_ACCEL * dt), 0, CHARACTER_SPEED);
    }
    if (phy_speed_x &lt; 0) {
        phy_speed_x = clamp(phy_speed_x + (CHARACTER_ACCEL * dt), -CHARACTER_SPEED, 0);
    }
}
// Jumping.
if (gamepad_button_check_pressed(0, gp_face1) &amp;&amp; jump_timeout == 0 ||
        keyboard_check_pressed(vk_space) &amp;&amp; jump_timeout == 0) {
    physics_apply_local_impulse(0, 0, 0, -750);
    jump_timeout = 40;
}
jump_timeout = clamp(jump_timeout - dt, 0, 30);

//checks for collision with ladder

if(place_meeting(x,y, obj_ent_ladder)) on_ladder = true;

if (on_ladder){
//do stuff
gravity = 0;
if(keyboard_check(vk_up)) vspeed = -2;

if(keyboard_check(vk_down)) vspeed = 2;

if(keyboard_check(vk_space)) on_ladder = false;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>6</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>25</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
